"""
Домашнее задание
#ЗАДАНИЕ2

numpy — один из самых базовых и полезных модулей в сфере Data Science, поэтому пренебрегать им не стоит.
Для самостоятельного закрепления материала вот несколько не слишком сложных задач.
Крайне рекомендую при решении не использовать стандартные функции из чистого Python, а стараться использовать numpy.

1. Дан ndarray объект, найти четный максимальный элемент.
2. Найти максимальный элемент в векторе x среди элементов, после которых стоит нулевой. Для x = np.array([6, 2, 0, 3, 0, 0, 5, 7, 0]) ответ 7.
3. Реализуйте функцию, которая принимает на вход numpy-массив целых чисел a,
и генерирует массив, в котором число i встречается a[i] раз.
 Обратите внимание на функцию np.repeat
4. Дан numpy-вектор и действительное число x.
Вектор длины n+1 задает полином степени n.
Найти производную полинома в точке x. (Например, вектор [3, 4, 7] соответствует полиному 3+4x+7x²)
5. Дан двумерный массив размера m x n. Определить, одинакова ли сумма элементов во всех строках и столбцах.

В NumPy есть очень много функций, и про все рассказать просто невозможно.

Лучший способ его изучения — решение задач с параллельным поиском нужных функций и чтением документации (http://docs.scipy.org/doc/numpy/user/basics.html).

По пандас:

6. как заменить пропущенные значения нулями в DataFrame с помощью pandas? (Подсказка: используйте  `df.where`)

7. найти все строки, в которых показатель показатель accidents превышает 150 и выполнено хотя бы одно из двух условий:
vodka превышает 10; показатель crime превышает 1000.
Отсортировать значения по убыванию показателя accidents. (Подсказка: используйте `data.loc`)
"""

import numpy as np
import pandas as pd

def eq_sum(array):
    return np.all(array.sum(axis=0) == array.sum(axis=1))

ar = np.random.randint(0, 10, 10)
df = pd.read_csv('road_data.csv', header=0, names=['cars', 'acc', 'vodka', 'crime', 'income', 'retail'])

print('1. max even:', ar[ar % 2 == 0].max())

print('\n2. max near zero:', ar[np.where(ar == 0)[0] - 1].max())

print('\n3. repeat:', np.repeat(ar, ar))

print('\n4. poly:', np.polyval(np.polyder(np.poly(ar)), 1))

print('\n5. equal sums:', eq_sum(np.array([[1, 1], [1, 1]])))
print('   equal sums:', eq_sum(np.array([[1, 1], [2, 2]])))

print('\n6. df replace empty:', df.fillna(0))

print('\n7. df filter:', df.loc[(df.acc > 150) & ((df.vodka > 10) | (df.crime > 1000))].sort_values('acc', ascending=0))
