#task
Написать функцию, принимающую на вход целое число и возвращающую строку, содержащую запись числа в классической римской нотации.

Сигнатура:

```
    def to_roman(n: int) -> str:
        ...
```

где `n` -- целое число в диапазоне `1..3999`, включитая границы (дипазон в котором определены классчиеские римские цифры).

Пример:

```
    >>> to_roman(999)
    CMXCIX
```
Для преобразования использовать стандартные правила записи римских чисел, например

    `'III'` -- валидное число, а `'IIII'` -- нет
    `990` -- это `'CMXC'`, но не `'XM'`
    `999` -- `'CMXCIX'`, но не `'IM'`

Задача со звёздочкой.

Написать парсер римских чисел в арабские. Сигнатура:

```
    def parse_roman(roman: str) -> int:
        ...
```

Пример:

```
    >>> parse_roman('MMCCXCIII')
    2293
```

Задача с двумя звёздочками.

Написать валидатор для парсера, пропускающий только строки, соответствувющие стандартной записи римских чисел.
Для неправильно записанных чисел возвращать -1,

Пример:

```
    >>> parse_roman('IIII')
    -1

    >>> parse_roman('ABC')
    -1
```

Решения присылать в виде python-модуля, содержащего требуемые функции в личку игреку.
