#task
1. Света и остановки
Остановки расставлены через каждые `k` метров, Света прошла `n` метров. Написать функцию,
принимающую на вход `k` и `n` и возвращающую расстояние до ближайшей к Свете остановки.
`k` и `n` - натуральные числа.

Сигнатура функции:
```
    def nearest_bus_stop(k: int, n: int) -> int:
        ...
```
Пример:
```
    >>> nearest_bus_stop(600, 2000)
    200
```

2. Круассаны и эклеры
На складе лежит `a` круассанов и `b` эклеров, которые необходимо упаковать в коробки.
В каждой коробке должны быть оба вида пирожных, две штуки одного вида и одна штука второго.
Написать функцию, принимающую на вход `a` и `b` и возвращающую результат упаковки:
    * `(m, n)`, где:
        `m` -- количество коробок, в которых находится два круассана и один эклер;
        `n` -- количество коробок, в которых находится два эклера и один круассан;
    * `None`, если упаковка пирожных в коробки согласно приведённому правилу невозможна без остатка
`a`, `b`, `m`, `n` -- натуральные числа.

Сигнатура функции:
```
    def pack_pastry(a: int, b: int) -> Optional[Tuple[int]]
        ...
```
Пример:
```
    >>> pack_pastry(4, 5)
    (1, 2)

    >>> pack_pastry(3, 5)
    None
```

3. Шахматы
На шахматной доске произвольных размеров стоят небьющие друг друга ладьи.
Шахматную доску повернули на 90 градусов по часовой стрелке, напишите функцию,
которая принимает описание расстановки ладей до поворота и возвращает описание расстановки ладей после поворота доски.
Местоположение фигур кодируется списком натуральных чисел:
позиция числа в списке кодирует ряд, а значение -- столбец, в котором находится фигура.
Например, последовательность `[1, 2, 3]` кодирует следующую конфигурацию доски:
```
  1 2 3
1 R x x
2 x R x
3 x x R
```
Сигнатура функции:
```
    def rotate_board(before: List[int]) -> List[int]:
    ...
```
Пример:
```
    >>> rotate_board([4, 2, 3, 5, 1])
    [1, 4, 3, 5, 2]
```

4. Число в ячейке
Дана бесконечная таблица, заполенная натуральными числами следующим образом:
```
   1  2  3  4  5  6
-------------------...
1| 1  2  9 10 25 26
2| 4  3  8 11 24 27
3| 5  6  7 12 23 28
4|16 15 14 13 22 ..
5|17 18 19 20 21 ..
6|.. .. .. .. .. ..
```
Написать функцию, которая получает на вход натуральное число и возвращает его координаты в приведённой таблице,
в формате (строка, столбец).

Сигнатура функции:
```
    def locate_number(n: int) -> Tuple[int, int]
        ...
```
Пример:
```
    >>> locate_number(15)
    (4, 2)
```

5. Agar.io
Дан список игроков игры Agar.io с размерами их персонажей.
Написать функцию, принимающую на вход заданный список игроков и возвращающую новый список,
в котором закодирована возможность победы для каждого из игроков, 0 -- не может победить, 1 -- может победить.

Сигнатура функции:
```
    def find_winners(players: List[int]) -> List[int]
        ...
```
Пример:
```
    >>> find_winners(players=[1, 1, 3, 4])
    [0, 0, 1, 1]
```

Решения присылать в виде модуля (.py-файла), содержащего все пять функций, в личку игреку.
